type Space @model {
  id: ID!
  userId: String!
  spaceType: String
  spaceSize: String
  spaceCapacity: Int
  country: String
  state: String
  city: String
  address: String
  postCode: Int
  lat: String
  lon: String
  title: String
  description: String
  spaceData: SpaceData @connection(name: "SpaceData")
  photos: [SpacePhoto] @connection(name: "SpacePhoto")
  reservation: Reservation @connection(name: "SpaceReservation")
  blockedDates:[SpaceBlockedDate] @connection(name: "SpaceBlockedDate")
  calendar: SpaceCalendar @connection(name: "SpaceCalendar")
  bookingType: String
  isPublished: Boolean
  isReady: Boolean
  createdAt: String
  updatedAt: String
}
type SpaceData @model {
  id: ID!
  space: Space @connection(name: "SpaceData")
  bookingNoticeTime: String
  minTime: Int
  maxTime: Int
  basePrice: Float
  halfDayDiscount: String
  fullDayDiscount: String
  createdAt: String
  updatedAt: String
}
type SpacePhoto @model {
  id: ID!
  space: Space @connection(name: "SpacePhoto")
  name: String
  type: String
  isCover: Boolean
  createdAt: String
  updatedAt: String
}
type Reservation @model {
  id: ID!
  space: Space @connection(name: "SpaceReservation")
  blockedDates: [SpaceBlockedDate] @connection(name: "ReservationBlockedDate")
  transaction: Transaction @connection(name: "ReservationTransaction")
  guestId: String
  checkIn: String
  checkOut: String
  guests: Int
  message: String
  basePrice: Float
  discount: Float
  discountType: String
  total: Float
  confirmationCode: Int
  paymentState: String
  reservationState: String
  createdAt: String
  updatedAt: String
}
type SpaceBlockedDate @model {
  id: ID!
  space: Space @connection(name: "SpaceBlockedDate")
  reservation: Reservation @connection(name: "ReservationBlockedDate")
  calendar: SpaceCalendar @connection(name: "SpaceCalendar")
  blockedDates: String
  createdAt: String
  updatedAt: String
}
type SpaceCalendar @model {
  id: ID!
  space: Space @connection(name: "SpaceCalendar")
  name: String
  url: String
  createdAt: String
  updatedAt: String
}
type Transaction @model {
  id: ID!
  reservation: Reservation @connection(name: "ReservationTransaction")
  payerEmail: String
  payerId: String
  transactionId: String
  total: Float
  transactionFee: Float
  currency: String
  ipn_track_id: String
  paymentType: String
  createdAt: String
  updatedAt: String
}